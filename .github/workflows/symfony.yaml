name: CI Symfony

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ES_HTTP_PORT: 9209
jobs:
  symfony:
    name: Symfony 6 (PHP ${{ matrix.php-versions }})
    # https://hub.docker.com/_/ubuntu/
    runs-on: ubuntu-20.04
    services:
      # https://docs.docker.com/samples/library/mysql/
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: symfony
          MYSQL_DATABASE: symfony
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.0']
    steps:
      # —— Setup Github actions —————————————————————————————————————————————
      # https://github.com/actions/checkout (official)
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring
        env:
          update: true

      - name: Check PHP Version
        run: php -v

      ## —— NPM  ————————————————————————————————————————————————————————————
      - name: NPM install
        uses: actions/setup-node@v2
      - run: npm install

      - name: NPM build
        run: npm run build

      # —— Composer  —————————————————————————————————————————————————————————
      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install

      ## —— Coding standards ————————————————————————————————————————————————
      - name: Coding standards checks (php-cs-fixer)
        run: vendor/bin/php-cs-fixer fix

      ## —— Static analysis  —————————————————————————————————————————————————
      - name: Static analysis of PHP code (PHPStan)
        run: vendor/bin/phpstan analyse

      ## —— Tests  ———————————————————————————————————————————————————————————
      #- name: Load Doctrine fixtures
      #  run: |
      #    php bin/console d:d:c --env=test
      #    php bin/console d:m:m --no-interaction --env=test
      #    php bin/console hautelook:fixtures:load -q --env=test
      #  env:
      #    DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony

      #- name: Run functionnal and unit tests
      #  run: vendor/bin/phpunit
      #  env:
      #    DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony